%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.5 (Build 18F132) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 557 325
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 557 325
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: WZHKNO+Voga-Medium
%!FontType1-1.0: WZHKNO+Voga-Medium 001.001%%CreationDate: 12/26/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Voga Medium) readonly def/FamilyName (Voga) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /WZHKNO+Voga-Medium def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /A putdup 34 /l putdup 35 /e putdup 36 /g putdup 37 /r putdup 38 /iacute putdup 39 /a putreadonly def/FontBBox {-85 -155 839 909} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF3B23880744AA58809219735213C039CF145C939C96005FC2F21108D5385C25B038E703F449EA113B373F63ADD16E5005C0BD36CD5B58553DF6F882F4C6EFA666437673F95E2F0474EF11372C8296A47AEB69C3A2FDBE4DFE0E5E518B191BBAE791580687A1A8F6E199F0DB6054D195055638A0B261D9037C76545A063BD6DDC40A551B8E8BE1564AD9CABC5A779DA3848730EAFD1DC56D33E4022DBE0E7C694316012D8A0DE91852B475C1B0E4CE607C00BC5E9E813869964A8B6F52DD30A92509C44DE0075770296140384377B83A0A93184F054D5E7C33B18C91171D4423738077335E34E4678A5BCEF8760C899CEDF9E928FFE3AE2ED776866D2DC40813DD6686315934164EFC629B7FD0E3E73096DBD306C5A54DFB14AF3F2F896200C23A11986BCE83A24DFB88FC1C82AFAECE9683BF5958CAB087F33FB57D46B52C2877BA8F130CC2EBFD7C126AAC6083E851E35FB9A28989A815BE1A35FE695458BF80F74809B5969E3998CF889EC0598D33F11481BEEBD092C5D2F908498801D8790E6F726EE9A8BEA01DE460B40B23A617F7B72726E6F4BE83C0248C75F8E3251223611AB50557A426FA5AF8822DEFCFB2F596263A5A15EDC8922BC562C1D2B05F1EF1BA66690C6D8E03D2DF4EA715489655AA4669A5B6B3BE2756001B47417E32A783E1E8D096DC098AE441E642BF9DFED84661B60E4C6E44651A34E50CBAFCBEB6E3571275C947DDE33CABC036752896E9E0B7F84F7DC8D93A2D54C2F606BC76C9CE38D35F647918685610A1737EB93F6A63CE8F59C6FB8D94F39E3FBD31202EEE9E118CCB63124C9372F18B3C5286AAD82DBBE6E947EE8FAF977B1DEAE32A0EA8D57A5CF58DD95E8967087368354534864733AE0B3F72EA409C88D87D5CE7D8917E0826CDCF04D07542C93825CFEFFAAA7470E4526C164A10D5F64BC40F9220AFC65BA5098236F1809D27CF8403E149A9BB6E3B62852833D402F931BD8A835606678F3869775CA9FB22D1F3F021AAEC4CBEAB4EFFEB0E396D87D857D2F11EF29B70B55AD8979C2394B83212C0F1D9E29D70F1C825BF69F9B3096928277B0AB8FF361B20812B51967D09767F14ED6DB5CB291F875DA4CD09F566499CB3DBCC02FCBB89899439BCB4FE4FEFF52C7B2A4A85639C5C43A02FA25A3D4E4C32BF0D9631179349B36EC9344B06F8BEFA7AA49CAB5F9AAB2B2B4C686136A9420CB2DC79C444A2301D92F252CDBEAE4E8DB9D49778D5C453B0C3097F9F2EAE2706B4D4E82F981B89368E9A2141E42BC219C4A7F52E937F801F53F5B90F2F2B6B0796851851050B7008A53D5C8B10EAA3BC3617441DF5D8A9355006C2B36749A75BB0028AFE185D555760A2EE92A8BAF23EF4D00E798143D9C424161E77B08F3A80100C8232DCEC36662DD14A32AE5217C828FAC4964219AA4F2D14255B170A25706D768EE45C5A1A25EEE424F17AC4D921AA2B381C1A949313D16525840A1848023CB24FB2EE56CB6AB3194C8A3FB8502AC0650B76C1454DBAADCB1E3516DD13902AC1488BA6D4039DC5BA765BA047F6DDC04C22F9B8489F38556D42F9E1D09B2658D502230B2AABCF737DFC61D40529B79ED45121441414B63EDB4A8E8468EB303751B7282E7E0AEF78C7EC5655B572DD80E2FCDE371441525748A5FE363EE0ABCEC86631BF36F8698920D4BD618CCB198C5AB11A8EB0178D6AA963F8BCE9E76996D91C8A61F86D2F24FFA0E019DC858D5C649C0D4F3EA9F9128115A28F1EFB229E8E3B17920BD54FE4437572FDAAA53EA462A328CC09C9AADE21FC37E02043D47FF8B3E145869F8FA91DA5CF8E2FBC2D93C89F697AF1F508BFBA7E25E527DEB913E874E50905227065BD36174501D341CC87EC05346A3008E85E39690B58197D00C1FF57B9F75C81AA45E844297C5BA12FAC0BA54570D34F2E692C38B44EBB5086754984B062B91BD0FD3952B1C2806C969B92CBEEF19D31AB0C4F7F500C85B72192C5A802A12394A7E617572C3842AE875B60B5DE57657E45EC327838EEE908F4CCC95B71D9D88347F4DB56DF9568E34669F11143BFC82714D6038E4822A633DD778D549856621FB5D515A9B1012E2C303F1E3BDCBF9F938AA6A710C3BDE756107C970A1AB1A08296B151F7082FC723BCBF768680C457C8E9C7D22F0301BD9995BAFE13C31705780DFBADEC1F845A8087B9931CB9EF5AD3A037DFB9BB5742991EBCF46281306695A432279E0226866FAAD7375B231B1B5BE00BA28C4A53869EC613E5E1F21490456FBB0D998A29787B2FAB45E8D138A39F8B86585D8F1BF3C6AB6BB6673415F9FAC0266E4511A68ADA31FF6D3FD86EAC1099F40173ECA85E28E21CB4DBF5A657968714B9528AD0353B314C12DF695A548B7785EFC7A7821F8FA14D0F0BCFC3D956FEFF19B34623D0609D34DD9CB84ECE4B32A438BB7625679F6B4B56CB60234BA686D5CDB1E134A304DA2BD29C1FD5830AE63CC36286EEF6261CF9BD88660AB08F7BE4FFFF7E79FC50689409ADDE36054AF449679C861392D4C6CA0928E356EAF8BC4D442505183A6C4CF1C9973416C4182DEC3D15CC5DCC6E2500EAFA687D8402A58A8510923438AE47BE046E90A425BCB0AEA9B0A5F73A0DB9457AF2BBFF12F12E60CEF33A27406D76EFE58062265B2A9D0511BEB08DC1428AC5A11D674CCBBC4CCC949D8F767E9782FCD47F498E2AD61E84E115B078BC53FB5082D94DB2BF349ED08A44D4474FC28B8EE48020585683D1981BA87857C968E91D505A4A1464775A786D2740E37EE536DA2A081A89BA48A81383111967ACD7F8EB919EAD927C3BDC865246B0C577000FF87B8FAAE14356C9D51E0129722B7E2871A0781563633644551FF88FB43C84A5945AABF6121EAF8B24CCC3B5173B5141B152FEDAD5CBBB9DF462DE96FEBC94A6BEE1EE776C515723B562B16987F09C21F68759848CBE07A4D1189C6E0A19B339F45F4B3837B6C11CBC244BB0290ED359DE697CFFE9DC06A74CD1AD15781B8145915F4B736FF2E339DB67C43A47BFD6A831266D8E72B01B43732881B1648BD2212998A70D3F0277469D28F6B37F2879260400DC7E2E97295DA4BA7068E7B3B06A8B2DBE805C4A179694D4098A30931EE4A849B9390E79F146F4CB45AEF3D25874223D5E09A7D18BFE05AE3E78EA3C64C2C918823BE882F1A63C5696A71C9C9B429BECB5B6596E2C4B0D20AEDC51D3E7CBE09828098FFEE9F20E7DA22C99D64BF08D5B2F8541FAB00C050288107F5B971049994A659DA89FC3FCBE754C059E4379318CC63253D5108CBEF3EBEDF1ABD982D9F30B228BE64E555C4A891C589F0E6F5119B4490263C088F62D025F66B7A998455DBAD3432619C801EE8972043C4484D66F28E87A219FCD73B8DE5C6CC24DADE6F8C5F151630B049ED9A62F39FD3682B749C1AF011F8AB2F7E2418CB33A9F08B93D4E3EE391FD0B803E5CD7DBCF2187FBAFC32BBC2D7D01C47EAD3472FB71612BD8BF9C419BC6CA0397A16E496DDA88F342D885DB8EA727124CD5DD22CFEF0128252C25236106050A36853312E49E85DFDB12FBCA8EF59ADBE0306C436B6526FE38D45AD9D7A77551A7486725DC5B747B1579568983D5F41CD705DA12D98ABB61E86753B122B9738B6ABECE6A3881AAC5D4B868B7F26CB7EA88861422876C4FBE62C5F6FF14E7AE0A16259ADDD32B7190124E19169787F5198021FE9B482FC0ADACD08ADEFD6A5127E218A475A711E8521BAF4C9B4582E305A69EEAD6F38FEBB9DB48A18C751E594365330421DD63C382CAE0EB9B5F9E9F8C00A112745703FFB4196D9024DFDEDDC59F27DB08561E3D88AF092BBDE7F0827130B6CC8FB09493D3E2E3DB97492408E151FD1445566652836E5338CBAB19E287C329B99780F6E449C82D55709D043C9E03B07E1ED0F7CEA72BC11F0127EC8EA6F0B9EF21B23B08DC0D571B0B1BBFAE76D7B1A014E224D52E692EAD592B3A37CF38464B6F8A49B66C9A7EA088C2BF3EED81384744E7E5DFBBD1FAD0ED528779C10F779F4ADAC50E0EA0A7BB9302D692FEC787B055D409E4DA2256937A058B139ECF0BC77A99E22F4A40A74CE1BA6134B11905458A465D54B3A9C9FCE9E56C94E949542DB87ECDECE7077FCEC83697958D1E2D68AA25091FA0EEA9A01C709232835E3B02519622DBAD137A0070E89B866C169A8DFE6B70352F12C5BFE13842E2C140A2E3B3A0971D50A8EC6EC98C5B19A5E5A3353405BE03AA5681723FC5925C31C799CE00018DFDDDD9A65BC7010C149C0A0A4BC0BB54276DE7C15E193DB06028959A63122D5699B8EF565106439131454D7C60A209DFDD3ABDEF98487D39C2AB17F67BFB972F026FCFF24175CEBF3193F956D30757F30C5920B48300A083BA1080DC9ED5797855EDB9E80AE5CB8B6BB7417044B64B6E557BCDA7F6534289D5972B7D0DD16AA15CF8AAFD4827D322406123599A5158735231AA1573B177209C176E78BE5AF67F38B47F93573AA1B067A6B13FBDC7F1A822EE31DEF7A6AEF9308863736A6C4900A4F67B82A35FAC8F5CE87211B4DF6E9B3E2FA5113C59D35BF0CE0B59415F70312D0ADF9F9B7A4A26891B84E12C1C19319CC68C0C9E8DC9098C8B327D646F4469BE70564D2D14D29DA2F7313653C94990E2B9A66EAAB4C0F84F2BCCF3639797B11A03951E25CE2C27CD1C8F89E907A28C89383F780816628D42A248B1C25B29823F96DFDB6753101669D13E50179CB655CC8BF27DD75BFB94E19C51E55C9CDEFC9853613864540B10A632A53AF97E1357362535E96892CD5882B9DD820456EE58E558552BBDF515A4DA1501BFE50BBE1BA6511DEA12DE280DE92B88BEAC94EAE543B77254F4DFCA3821DCB9C5EDD099E767A6D67D575D247700AEDDE058921396C71935A1A7849AD007CD603B64D275484E08C0F6C7C4A6DEAC7C81C75C0AC5EEC6E9891C55288A4F06BCE5C3300FAAF6E3E668CEF2673735A0F2E9E6DE5CFFF353B3A7F2AE2D3DC65259D61730B8C54063B17598D67BB8A8D6660DAB25B13788C752E4567C488D5DE95496A86456E9D8F961A85AED2A26F7968AFB2291BD93C749D54698B53F2AD49C9404874788AEEA4FF145AA25A17134BE725C92CFE516655C786DAD68A8AEFA29BF13ABCB45D9600EC6C66E1C81F4474B9E5D7F30FDD98528F06749259941971F44219CF94C07B3AF2774A252AA7A136EBBEF0F5C4DDF6E31D6CAC93CA2B5F9E2287B0A0C615D0327A58C0B881183A2C3AFC7B97C9C279E97BE04A9585215FBB08170A7BA57DF389DD42EC3A9099A7715887F84EF67BFA8057F22004BDE8F375BF795271CBBCA0F26F4777D469F810567FF9394D1203CC443FB53CDFAA2CF591A42270C66FF024B777A0FD7E6DAD75766A3401DA1EA67FC234F3C928A8B39E7E3B3F830A704F1C26A143A3A825A4F5C7E84D7C5E0740246CE0F3B16E6219752480BAA1D22732E1D369814052EBEEEB5723685B9A1629CC038A7632F5AB7BED49C36F3755D1D60FE5C6648ABDEF4FA4F520AD10DF2291EB7BC55776006CADAFE3AA48131504E4F325AA783A6FE0945BB3D262DB1EFF92D9586AF1B7024801E657789AFDF8894081D54BE07AB7247E267B5BF2D86FF1FAA947C3D269816959A17F168CC267697DC7BF9EABA4382C5F40A1CF462C8F040315E7E13B252A410187D7F91AA4A06F12EC03B8AA2EE4EE5360011E3CC5CA92675046625FFE55FAD021CCC04104AFE7C88706D30E3C3F391A06DBD1DF614A031CFB9ABA8ACD88DB82701102E7A8A698A14A1FDB6580A6AF38F30726774DC13C863A9FE0F44A01F4EFA74C4C252D3BFAEE4BEA0685E85CB042B770C6C024CA0A0AD108E059CC96DE9159BD2B5F6E1FBA880DC908AEB04019EED4E91ABCE6F2DC75D766B2190CCB2B09D051AE8F6928F0DE8D1DE170370310B47CA5EA36F36DC5B4BECA285348FE342DF4159E76193E0C48CA75841D6A4BB6C9C133C534D3DD117CBAADC816BF770C1130E7EBC1F9A90BCCD1DC4C9AD349E8DF7FCAE4484EF708DCCD086AC3E49E96BCE89F1727D6CC0FF10D5BEAB8E2E7DBF6DB0F441BF8D52857D3F397DA50C2511D03776F66405F00D3B6597C8134A128B08DAAB9AD05E29B63189C0EF63B738B582F7BD73DEFD5D83707BBC7854ABD1218C6F4DB5A03B2DECCEE6E3550F77DD110C78014D9097CD43ECD5768D80201AB00D15F7FA654B09A68FB34024FEBF4D0FA71C670B2567F0C35D18CCBB8FA03747E8932B38976CBE0A6B7941B03AFECCCB61E65C19ABE17FC3EA3E3133EB74299EDE598F5476590A48565AAAD31DCAF8203F6F8033E055C20FF008F6EE1FF79987DC597D863146AE30455D41E165FE578B8A91F735666227B3DEBF70F09A4AEF347D3BEAC7278976DF15EC832F4FE420515EFA04EFCB985C12FFB3EA7637AD64DF2E94978AD7DBA0DBE60F36E9A96ABBACDA9B70BD916536DCF57A71C4A2EF752B9DE92BD90CD773F1C041DF1EDF2313B3A0CDF39937BBEDD823CDCBB2C92C062C42CB5BECEE64AD65811E16E004EE2A3B1F2C89D920B42A0CD5078C2D7C85B91D6B14D4128004E3F781AD5FEFB68C0F2C4F30E8B21A24DFBA2E7E60C1B615D0C7749EBF129981F9D6B2057D7610E46A73BAE8277A230DEE463BFB3E81D4196B0938E03BD4F4C928747BA35D59A1022A7C88CD2DF7E8E3ADC9AF30A538DA66D093E544697D98BAAD00029603EFB6A0CE0B9C56A8CED811B1798165EEB2843F6C59388E0687BD2F49304C3835342BF04AD0502C0090783A8DBDCBA276210D6AC2D2C91CBE0965EA8E2BBB04D99DD4A96AE0CA1D77420D9E59CD24EEEA91745F51C29545787D8458FF858E41DD9C2CF0ED73CAE4B3BBADF00244EDCF082BE84A978671E25B9C591ACC37177D5A2D2DE8FE41508D440770BB81554BB6BA795461DC3F226050491EEBFF240089D9AEA07C5CB2764FBC20B23A1233B2B6572B03B9428BDD132AD7F1E4180C031806521EFBDF5196F82A0E04BE9006C243E8F974403B3ED69F7D6CFACC38DC1AB740B43613DC1EB9112278BA53B231442A86B81D185562D60690E5C2E44654075F0DF4C41887CAC06E238EBAA707C625BA406A76BDC6497D99A0EDFBBE8FA534B34399FCAC2AB645F1F5EAF48B560A9601CA9627C3909F1940B0EBBE7615963A5108077A8670EA2A017375577354252A46BF790DB38B53C11D197D088170B322E6101B07D438E3509E7053227F0794F83F33A328A55503EF8C2D3C0E49F328E755829EB7331F0743A694E96C24A4B7E8275842BAA8038C4FF10AFE2B6B615B5B3D6323AAF3AB5F0826FBA0831FE6D4E7852D1AE93B4D572B32F49C1B5B5D4C91CD3076D1E425386298B44102CA672AE00A469DD6239FFC6EB48642BFEEC4B8EE8580BEAE06E39CD47ABD5D04B597D3FA4B0BF5771D0CA5FECA85C00A9BBC282B9C7B854B123152BE6605565076E79E7573D10BAD31BB46AB27297F3EB892BF4E9A65101FF4375857D6714B21EF8A0A4D6B78B47E2D5770687DADCA4068C16C901AF3BC7F0822D5469EA8E5DDA4554E1CC5F7204D77FEEE42F04C53D84C1AC64D3B91B22BBB93D865639DF13B970F286DF450AB61A83C78EF78EBD44B38890ADA61B6E02DFD2CC00935C0B61B3284E84DB4764F40DA7139110342F147503608AEB776FAE381901A7BBB0E783FB48A9228AC692D906B030343EF9C9F34C2010639B723494CF04A27F941B5387C333EC92DB70BCA4F82879DFA976857B4746F7B2A94CEB247E2A4C7A9D266BE7AF4E15B27BA8C249C46731650E5AFE7E7547EF5C4DA526EFB9CA5704D73040DBC5BEE22A77E894123F1C957E43EDD17AC34052ABE5B5EFD8A3B86AE17E26BA3281587FF35F74F8FE7D14B7B44B3BDEBF99BB2B4C9E9AE71BFA8AD33BF6D2EC9384AEC9EF6591D09F5D7A2B062B29762641FAF1EA42257A27FBF21F9FEE5F45132524C39B40661885EB30F6F3B26E479DA2061F746F9C9361F20AA1AA988ED6D425F02C783D179FF3B818ABBAF1BF0EB31A3909CA340EAB192A831BA11014024F4C46E40B6C48EB49C585D6362A74CEF6790A102293D3095B57A2BEA6B54B37650D4FB28BA5A05C1E02D02E7DE96C0CAF1D7773B74C3FEB1B5A8BDF938F69A02B9A290E5BC31B98E27E0F586CBF2D16EF719F9CCDB069F8FD1878E948187222598386BD0CE2CDB95E4F8D8A24A0766F2DB64FCA36518D3989D3B8A6E42DF75C955B3D5FC9C9A444E39276AFE6318E271BA2769FB3DC84D6FC2926151CD6497CCBE0621EC35651395E03113F7C124A3188748A0FED74C0E0C7A68F3A2D1AE830552029D6132FA46BF2446EB501404C5B23243C6E177F39FE232BFA7D51F89312491DAA72EEBBB0ED7F9C9CDF027D27E0262D52A6F3B21982C5C9685C58AAB67B9E436E799F5DB409AD56AF43359B92B4B3216D5DAC0FCE419B6CC6F656F8844CDA54B976D57AD023BCD77E69D9B4A9EC8240AE76FDCDF654B60234D2910E7B329E96BD6BA6D9D7E3243A164B34DD48AE1DFBB49AE48A69E7BE619F66B512C427FC846F3206E69E5A49C49935CC28C51657A1F9A6B93B795C95A4C7C0A86838CD49D527C4461713F1BB5E7EAF4A07D9957C98F8F6CECFB35CAAFAC064E9A5ED883E50A12A84FBD2231EF50499EB0008B402929BE09F85FBEE9952C2A8ED2A4806C9BD54DDB896810FDF706261F3BDFE60F4AEC11588A430A943F30A06121EB9375C87CB9891F01353FC8F657D8BEF2AFE6358F388CFEDACD85C0B7CA21EF2653F36FABE20B0D28BCB3A3423C418834BE41E93CEF4CDB3D65093B5D862373BFB1EDFC040FAB932CB212DEF4E48250FEB31E978314F5F72BDB3FD7EAD5200FE6E45EAB98FB7D07884342BE33C90C19BC42B7B32FF2DFD70002B47344B661802BD03ABD51575F209DDF865EF98EAF0ADCF54140C15416079E09392167E07AE41EB808EF299E1F9DE618C171BCEEF4A61111250BF85B34A23C2CFA317D0CB647FA49B790B518DA25F0D882107E77B67BE3B0A5FC28B87D8AB44E4674F07E8B154D51DA786E319A13381D35D768B8AAA352572C6702B3A0C24DF3FFFCD682EFAB9B8B5CC5FC24BC9D968D2D11AB87727215CFE882C4F65C7810C953259F6F36CB36C795A4BD0CD760F0A71951432B43B299A2D59FF83BBA0F4B798F7AFCBA171B85642A9AEBEE776511D9A9AF007D740C0686E3F7333FEF780F4E594C45E591794A5D6D89E453B4D6DFB580A6A0BB16ACFF7207B78FE5CA0EC6F25DCD8F0433D608165DBBFEFD09D0CC6939556CE5E659216DEA9E0667D0B8F6311E4F6D40F1C525F4997F96F61B5B1065BFA31EDC093602C5FD5189E73C5D694B6172CB13B97E65A4E62775CD15D2B9C3390198F3FE8768845025DAF257F32972ED5D3135E72D09C0D0884DD112160B0546835AAFF15F30FC2CE550162F4E47A6D44945EF222AF1685113ABD4B852F8F932266AC6C67541892D18D327CD8BD93BF5090A526AC5AC7352AB20EA9EC2EF7971632C6E7E968FBD94A481C08913DA639D116DF5E6B24F581E4976CFAD6DC0FF2C8717A3150AE88E344F439CB6BFB4756387F742CECE9EA1551902772307860B1A6278D7B8F2FA0F8C4C3B2B6CCB21FAC6E37EC9517071B5B34B7AB9313DB8F20A2738E74A898D2395E79ED0B4849C41758DF014E5ED494C1F493D90AE4BFAAFF94DC73261333C1883BA0DD99386B1052144FE0EEF871B410D6A17BBFC557F8D505C8E29DCED7F6A0C0015F90B4EB50254E8FF0DA4E2792F602CCE155BE71F037EDF2720F97BAB47C20170235B0FEA37F52B7E3E586ED5071314316F11384C41DEA7CAA95E47D5D9E486E049B12DF20C03BDA1C86D2E06E78C9E6BD776661E075760D3A9B9302C5B3F4EEA3EB26306ABB987CF9F237C6A181E194BBF3432511569A836F1DB0025C9170E4EA774D34869CA010C7F5FD685B92318A19D81EC8BF266FCC00B9324F74F9ED4312968FD8C6669646E98DF7705C6024E4816B53E8276B07EB478B9AA207A1398C6192326927162F014801E5A8961B7FE1D68174F761071B11DB24213D4F1A0CF28D0C647332497EA3E5BF81830EE5628878E65E878043FCD6E3000B805B58C6D410CE70F462E1242FDD0FA1598A13C8BD9B1BEDC57A0E7E178F13850D82B564D73311ED9F1B99A633393B64212E3006CD68EF343CB94A654DC344B5525366021F2FD302DBA8B1C05FD8DCB0ECD0C1571FA3EF33AC92350C14A75143DB02EB426AB9AC34908A29FCE6F2B1D378883BC3AAB21567839B86569491AFEB299935FC229B12FEB177D193CD5E4EA219709242CB3AE3A448331F196DE3258E16BA376B4BAC0B7DEF622DE7AEB777365C99DF38456C9188097493D6B062A393ECF79FE74B74F71C1A452F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/WZHKNO+Voga-Medium cguidfix
/F1.1/WZHKNO+Voga-Medium renmfont
%RBIBeginFontSubset: YWXKSN+STKaitiSC-Regular
%!FontType1-1.0: YWXKSN+STKaitiSC-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /YWXKSN+STKaitiSC-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid51 put
dup 34 /gid82 put
dup 35 /gid85 put
dup 36 /gid87 put
dup 37 /gid73 put
dup 38 /gid79 put
dup 39 /gid76 put
dup 40 /gid3 put
dup 41 /gid71 put
dup 42 /gid72 put
dup 43 /gid38 put
dup 44 /gid68 put
dup 45 /gid53 put
dup 46 /gid84 put
dup 47 /gid88 put
dup 48 /gid77 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -85 1 index div -228 2 index div 1029 3 index div 929 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/gid3 1 def
/gid38 2 def
/gid51 3 def
/gid53 4 def
/gid68 5 def
/gid71 6 def
/gid72 7 def
/gid73 8 def
/gid76 9 def
/gid77 10 def
/gid79 11 def
/gid82 12 def
/gid84 13 def
/gid85 14 def
/gid87 15 def
/gid88 16 def
/gid46456 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-85 -228 1029 929}def
/UniqueID 4346839 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB8C06574757F39367BB6CA219EA643E5CB90D2160BFFB4B6981960883A1D019FB5A75CA41677517D8D461BD5486232B40AF36445BFB44F2EEA84F05F941E41A3643515905B2783A3EF3911D96CD031F2EA68B82D3C3FD7C34A3E65D2BBD618261919A97B0BA69B3ACF350AEE88BBB453FC8F74C828CE1AA0AB65330CE3CECA97F08AE466632A54A9405096DDF4BABBE138AAD9B868CBADAF8881A951C0FADBFEAC921E320AC4E5A3C995F6DA5DB8F60926EC52355A68899A980223F79A829CA605A4D1741BDADF93862E95BD690D76A8CF3F2A50F92390BCBBE296C1D0ED899DF2D94A5533517487AB0130E733CD3E5385DECE232A4F8615F1018FAD1E030500DD86DC7BAE16E9E7CB8120103F822FB3E27738F205B6CC9F36B693E7BDB565D5187C19A87AE44AE3D55AF734885B74D5A2E7915D62B9BE25C838E44612B229A2CF785F7555140F48ADBB57CCA1EC12BA12D027FB9A2746D9BFBA2866D7A6C85D1B04C3410F5EA0AEF0D666743AC3D5A98542B29E59576B04D2D8AAD934C5530D249008E90AB9E3CCA63356376FDFFE8A0601A5555A9F031158DE24FF14E58F6F0F48A9FE316E6227A41ACC39E242C1120255183ABF2C2FC766D89E5F37553BF24272BB132ED8BCC05FB2EF0C6398F4913E14E6F7656C3FB24165324BA14F61223555F2C42BB7D1A0F0CA777DD9D857E80691EBE26C4486D5D16DB7176A2264BB43049873


301C619193D4C58E1C4F9729BD457A8C5F743CF7FCE8230427AB4C507A99FBF51EA4FB4C90C81349002D6DD84B7C81E1018C36981C68AC4B3AEB99F91B4A691D86FADCC452A9FDA38F213A38DD85E511D2F5983CA30B816D239487DB62BB14F2946831C680AE799A1F5DF6F30B4808F6F1792E8251487DE569F15F512BF42E93E6FA1227D6B482EB6BF6240727F5813D53EE76BE8B876BBE5037C93A9D60D22CA7E3B03E5D046EF7E41ED5264B01F18305AD72803B4316FA0E4BD74742AC61A614C0973EF6E14647086E0A0FAC5481C73E4ED4F47DFFB165738581FD0DC4AA5E8A73C928D509FE78A77B4616B0C7DA338E89F08550C95D2821A87532CEF08D792E68DE259F7A24361ABDA7F4E8B55E1C9AD93164423AB24E55D68C94D5ABEB905EA3A1C5B23C6EA2BECBFD79D72B6403C481ABA07BF02F52035627FBC61056354C911BBA0140DD3BD372E79C18B33BCFBFF433824FB446F6465DBD5A67D2EE37DAD79956C617213F8489DB3C2377499B4081CED5F4AEECF00BF614E3F60C7BB538E86F0F7E02DE9B93C6D8502F2713B45FE220C4A242C27EBD34BD35BFA7EC2AF95F7B98122FD61BD94F26046C8617C32E1BD3E7D396E6C0D3E36AA1D354973E9F4BEC5FE41A2E1DBCBD91AADA5DCF06FEE097F9E32B8480EFEDC8EC082E9CEAC57F9D4286C6F41C3B87163B247182E08285D97860A2406AC532899042917485DD1C632808F9548E00E89F1DB1CDD58DBE8111E26A7D39B0AD9EAB8A09559643AADE59917FFD9A73AD1F6BB3DD7104D4444EA9A1B8EA295B0CFDE1CA8936691A485E165B18116822963EB4E6B4D1DB428F56DCE13835C3796D6B2CC71257B54B7B3B6FF4D80704A3D9A20E37574DCD80EAA9F4A3BE520C06FD10F7B56A10D779B5AFA24846C68AFE8591CD0C3A8331BE123CC74433D24FA9748A4FD81D61215E302497301D30E00D93D47A8871D0646544632ED13300910CA70BF15D6068A7FBD0A6180D2998EB312607AB0BB3CA5F86906132CD57C77C0DD5D8384D16F9E2031FF84CD762EC4A2FBBCE97CBF3E62877E2B779A092B8BADF2788E209FA444445AE8F732E82F710AAE1567A4E13D5C190A6DC83236AC36EF36D77F2763D7DDF8E9F75213E40CBCB0CA47BA90B431057D6AB9B90279EE3BEBFDD5A363C703AB0274F4D07FCDD0C6086D1EAD24EB1686C66FBB90886702D5C63516F063E85E7D6A090357878925D9249ABBDD8C8DF0571C2308E2B553969D35F28F420550A0475B6E7F12E471F9C382E1CC2D9D35FBD7FF776D0F25227286381C0C0EC7700A3B8657F930218FFD879EDC80F16A8A517148993DCFF871B6046D4217EF318D6474BDA33A9AA64BE6233F53E29274C0CDF4C628976F3060CAB306232FBBD86EC525161148358D9992CB7148BE14D66FBFD4E835E0D335965DB9031D05E836A715D80F7
0C5165DF1F787C5C3532176E6D631BD3B762559F1BCD10A7E26D045BEE247A278FD316D63222ED81620FEF87FD78255F89367B4261A61188628BE5BDAAE1B520A209727E061B8E99C48C40B479668387024CC975D64C9FBA06DA0B1E6C68EA60E456670C4FA8AEC870F2EA9B73853A44905042D0B4AAFE3B2813BA3196758B81DFB960043A48974D1B0F0FC408DAAD7F7AFDF467A5FB78567FCCB9F10D70E2D6FD46905F895113450F104E5CD34CBFF08B33955DCE59F93A537FD5CEFB1FF4EB47648C1761084560254EC3B443AEB64ADFF5091749570BED6E90DE1AD8F42BD59B462BEA436734D8C91279BD1DB6756671EBD019DC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YWXKSN+STKaitiSC-Regular cguidfix
/F2.1/YWXKSN+STKaitiSC-Regular renmfont
%RBIBeginFontSubset: AIBEJO+BrandonGrotesque-Bold
%!FontType1-1.0: AIBEJO+BrandonGrotesque-Bold 001.001%%CreationDate: 12/26/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.001) readonly def/FullName (Brandon Grotesque Bold) readonly def/FamilyName (Brandon Grotesque Bold) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /AIBEJO+BrandonGrotesque-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /U putdup 34 /X putdup 35 /slash putdup 36 /I putdup 37 /space putdup 38 /D putdup 39 /E putdup 40 /S putdup 41 /G putdup 42 /N putdup 43 /R putdup 44 /bar putdup 45 /A putdup 46 /P putdup 47 /H putdup 48 /C putreadonly def/FontBBox {-157 -384 1111 1043} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF3B23880757926F6CD45399709654D6143B67127D4AC3C0EB6B564756F4E69A50BFFE54B532468E368B60907FC68B4840E0B0A12874781F4E3B081C01881325A4C036E81EE807E38154846A52B24ACE950C244B3A3E0DAB909B780350754491E2526DC3258FF07E1D9EF1E69EDCB40DE9F3B429F6A0936C3792ACEE63905D5E50F7B7FB7B4C48310066D780FEE75007147869340029E25C83A1C3C1D4B0087E43111B95CBE2DB3BBAA3172489454EAB736AA9D2870E9E66F77C0FC29DFDDEF0817B2A277E0DBFDFEDA88AB97CA95627BAF7C504C4A8703609095816835F31990956D95F9D1CF750EAF8F8CC904D58F697F6D532C09961C39E4357C82E6ACD2E074B7703F0D17ED362A35FBCBE74EA2A415830082191884FBE8BDDC4BB72ECE7476682B9F91CD318F281A6A4CA9F09F7BEA250720658B80737267F227D1F45C3F7313CCD51E41DCC1F029F4CEC0C9A9EF761AD5E8D9FE940665EEB7D75A499B3FFEA579A4DB5C5B80246AC04341E45374D30BB78C5E7019C8B62EFB64AE65676ACD8CB2303865726829BFFE48171056660BF2123CA78E0FEF84741FF8241D84AEAAC0844C03A81D547138B29B14676D8E371039E1256B546365620E18DBE5C980D20B045B8C3634D45E7D0BB88AF17C51BBAE5F66E006A9C1FF6E4636F33E0CC8074E93674050720079CD52592342BC7E7D053792F060D44B62EFF61A85FEDF5BF80EAA282E74C17133805DD0610B1695A6142C18C2907FB07603B98B25DB23A3D2AFEEED647DAA8313FC91F9FA648313478D9F174E357E6BC302F67FF63275AEAE0FFDB9CB22ED52443B1C1F455331F709755B9CAFB0B4563BAB6C22EA0D9A08FAD92C01F76FD42A9D2319BADDE1C7A9EFB4C43ED3A4F7938BBE1BD4C54303D843C30BB8951D12BB2628D5EB32E9C97033FBF431DA53E78128B25B10355BE9FBE75CBC376399A8E094F816014595755AF1E3BE59C58F1B206BEF98336F20862139D276B929D97D4821F8FF23839547E6E82D286692AE429D7C8D18A0F9B1A712BB4DA1E6C52F6380B958E7B9287ABB4CF33D60C93D823312992F7ABC324D591728E093C234DB053B1EEB17E771AB94B5218A51FBB6A5DF754DA2F12938F2F8B63F8F4A4486413808BD7E32CD40FE9F0DC7AD8B9B7CA9A3D513D5DA91466244C951D3C0FBB3B9C9B8F0A503D63BA4860A79BA86201A7951ACA6F971F0D5EF419116A75F1A13046D8912495246A339DF226CA54A2C78BB2C73517228E3E45648D9FBC8E18F4727692A544E07174B2EA352D18AAE72D4308D3A789DDF6F948B70DF5B1542D55A9E2CE90EACD116F5DA173AC38E4D383D6FC678BD4DBB727D9AA3CB53FF38CDB45718906C79583CCAAC65D7CF06426108EBC862EF95501B81454AEC4E1EB02E000AD567DF195DF83092A5582F80D1C639530D7014622757558BA6FF69B26F0553F9DE2B3841AB5EA6F0251E00BF0AFD9E5CE250478A86030B4E37ACD7F30AECDD39BD590BB5D9620974C8E7B0126838FE2CABAF4077E96B2CD27D607506A7FA0ED246FCF0267497AB9CE211427167878C7BE3D6B9503E650239CE22181AA8EBA09B58A4939E7CE3288706D98CEE226B9D3DEF3C01930B4DFA59A3777BE9BEDEFC720DF1B016AB7A45BA85D75B7412F73DF8E0192312BD5237EAF1936689EFBEC02C710583D73E6A751AD92B1D49B3F7DBA85C3DDE72DBCE2516BCBEE0F7217071A56BDE229DBB08E0BE185FEE40F9CB33F2CE9C6DEEA690ACECB76FD675AD41567B4115E8C0BCE9852FA02F847CB0667F039CE8A94E507B653BB0700915B358DDC168ED3F84136080C3763DCA10B64B12378546CCF698EE2D0F85311FB562E01FDABC955545DDCC90A1E63D6315D31117DDCC8E8D6EB52B7A5DCDCA69A07A176BE6AED0E08C936E9788CCE4391D26D5CF00DD91BA3051EE98FD1DA5FA8F7AE600A417FBEF663FFED3BAC2808F08D9D2DFADAB1CCF7885EA03921120C902F486DEE06532FD3B231646183DBD151D8E7E693FA31979BB2835E3D5B0C0C5A12779DF8D98DB936C055BA05C369C02BE757E8BB5E2E85E5A1EA11BDDA07C4347E34383C2A4FE8327F8EA72575BE6DF56E8ADAA57959D4EA3ECAB875FED3F7F641E038B8C60AA5CD74D504F340764253AB0BB2F84200417E7FAF4CAB5AD271353A71CD4A63E7EB1BAD954CA75F41B4072C350720D07BA2440EAC3A5FD8A867FD2565B30A6CD2E8FD5BB1C8DC8D7D31CC01F99DF972844C1820BDB15C4BBC328B9F2316FE80FA7BBD5D23A93662445B292CA9BFE6EA6AA418E30A8D92417CE7F537B9E89E45DD53CDCE4BB93D95F60C1C8B56C3660BBB555B11372FE3AE682A61754ADECECD8A5255DBD7413C8849D856754334E7655C1498586871816C8322BBF9C57B6D0AD30A4A0B255A5A3512D3BBD5990A5DBC9E0D7831722E8203933F6D7F6C9E6480DC5B047C22C6E6F6B9AF3544E217AA84ADC3356A47679227141D55F85EE95BE5C2BA594FD82DA6EF401811B17B3845B9D430B8CE384D3265F364DF000A16F52DD030DD85699FDCC899FB40E52F9A353B708185A17185A0D03D12C0604C85DF881338F8127ABDF48EB719EE0E919D323D292A774014DE7D2D2A8D4FD640CDF257DEC33497999178F8E503396ED1ADAE4B8A69AC69723208AC5564A40B89C5EC57A1AB79D1389855D28584F9D1D4C4736DFBEFD93D24BC531D75C9EB96F182339DDC3AE7EE7A5703B4824C3CEA69316CBE2F93E5F408F9F6E9DCFD290235DE89B51505483BF22AF1DA40B0AA55078AA0E5B8B402058C0B1F235A923F37063E867B9680729CAD9C05A1100D80704531BBC0DAC878E9B8FA0FCD122F4BF92379354A93122F9D75AE1B70401192DAB3E3D115301162113FB9203C7EB5A697E261625258112A09BA089D5929A72A8AF7FD49ACF926BB3790B464FB0A8694923EE157A2CFE639D7BBC2381CEF38181C6C212DC1874E94F41620FA8A369EB28B59A12A812351E49FFC8B8DC079AE104C43C51BE6C849CF8CDE432723A6D8F42F5ADBC3D8B929E7F997D0ED7750DA166BC0886CBF50C57FA5F8F6930625329677A7D15089254930B5574C2C6C138B50BCA48A267BFBEFCB5886BD0D45EF7FF8B64F7A39332B05AE98CE2E42723C70791A1D6BDAAB55ED7ED3B6BDFA27D870FBB4248C7BA379D76D4325C33F54C93750EB4C508080A9B1C1264C559E3F31FFCA2D5478D8BCB89038A3F793EAA7BBB83EA580853C834BA0FB502761774CA76F6561D0F3D75D16F8A4382D4F337952CEA6B02572A1C4F121C2E86303C2135348404E77366A8D421CB965056389D490DADDF3DC70FA97BE1889D9AA06BDE551CBADDF890EA6F5F42E3EC48857F7B6D98D0EAE323845BE488787AEEB8C13080AD6E80503E41FB048D8163F165F2FBEE682BB339017C36F9F0FC238DE0952385BC24CFDF08ABA7B1D3A5E08BB7FE4A0DD6355E38C6F0D390D3E8B87858F15A482EC76DA1B203215C53AF85892441FAA57148F64F9CA04B9E1166B8C5685DC70A306E72C6E1A7000AF5626884CC471BADEC339BF3A3C6429ADBD2384678C3D8F07526ED02BF43DA6D38C1D4B767A4AC9F19BCCA17A3A68C49787192C4A135F040B131A4F2576BD4E9F7B284151E3791B4B36B728FD487D7F1FDA2C17A136C1E0616DBCCA286798B40A33DE3695F1F1B6DCB8CE922E76D6FDC05AD9A40741AADA250385F68180C466EA659D886DB57061F3DAD1DDE48EA95C70D8A7C8FE0BD2AAED566B5D3AA82E26E30B9B32C81112BC3CAE3A1A428F46C13B57AED157AB46C60CCC5EA7970AD906B98665E77C19DC1F2BBA691605C770C3E6388ECA196D1C7C5F7BFCA2094853A2474155C2E83A5CAB6567BDFE32CEF6DB603BB6AE271E53284E4088F5C480475B8EC0476BA6D418857F0B804E84937482A417D8FB829FCD804FC3EE317C21593664D535530914DDC95B541A63F9EAE2CBA91B163A2FD8A877EEFDC0CC07469FC33976DB9904189744B2A84844E73FC2D4D3FEB41AF9BFBDF2ADE0D95A7431BAFD745066AF10693497E5B0852472B6AC9945A2AFB93D30B6B26FB25FB557A713131AF046BEFA1387197C6A4AD2208C113F8AA180C30003EC5E93FE098AFAFCFBFE87D08EE561204664C6DBAECD60609A54D6E411059923C16D74D34FD600706A5603C69D8AB455FD8EB9D4C7E68FD6801A9BBF13A01519D4EE726E5CA98FAD9E116E87FBFDF2883883647F235E51DB92A91168434D33A8B7323280F520E5831754B9B9AA3B38F46E5D42AA9C0593F769B9EEC303CA41739E48AAF564A21403EFB8DE75E62CF1360C8AF86194F3838925AA859666DD984805839C13490E11619D8D6E17DFA63D8D6D4E0732C795528DB8E9D9735588F05E5966EBE0E64661257D7FCA257A7674C32586A40F5D1C2BDC6651702AC2F0E5C7B69B036081A40FA812F558A4F229B03DBC86702360EF1CE876015E55DE37ABEFF26339B0CC3BB71957D20F692AC53C28D8C3A4DD95E51BFA7FF116705B2898ECC0A8B01199B87A58885D197BDF9FF6FE66906A3291A750EA8990114B4398A0D22AD47D8F6A4EAEC464F6211DB6702A0A3F72FE7F7FFDDCFF08DD3A685D6351AEA8A5A7CD32E14B63D3DA6C578F28EB64FE23187752BB25798D9A9E4F2C4714DD73A17095461AEFED389B86C63D4A794507310CBBEE7BB0C4524C78BDCA562128B1D0456D37BAC00691441C0182F93DB1E4CD72DF0B15A3634AA9A83855C42BF3A1B5672EDEA47296EC6243A1641864D4C0C655D8AA5F2C73AA8BA1D30E377D6379F8B328F6DAD1907D1AB9B78699FB4B672296612BF108496912136567C08ED7FA1C5C74818EAEBCDE5397FC063037B9EF4AF1F1BAD24ABE497C673D5163E82B42652664DA09A147B2BAFB20D6EAE39F56FE5F52EADA0471B248ED2591C6941789C76E73EFFDBCFE4F11C1E154D07A036CEA0CF52230EA049189C8EB334EAFCE14EC95ADA0A3DEE7E9AD98F4A41529F176C7A1663E2F97FFBF50C992446ECCD33B9EBEEEA64B854F839F065266872AEA9A886D7E57D4E8D7F69E872BF42B78C38E0E5433636B43C4E8B622290EF23AF52187F3AAB4A5CE19633B251EFD604CA383BEB3F636A4DCBFBB30C71DA68EDC4024060CC781BB662C231750C68394F505459A4BE9BD59A005EA797D8B928F9C8A1C94F1E6AFE20BEDF9A8BFBFDEC487869E5DA2B1371D7DAE2E1D4DEBEE564F29BECB37B00B751B6CDD1EA0FDBB83870FA9ACC4D37849B5778AADEAED6E3F10F369FB48C75BE9798761BE176F3823F8303E48E8EEC87FFE41F38EF15789EDA3531AE6DC9C2A88C9FB016EA637EE7DE85DE270AA6E7802087027E657EB1A2E987EFAD10DB78FD34FF330BCE9853930FE44289811731899F19BE6612FFCD767030243C15ACD9787BA4A44A1ED6AFCCF97727F9B9710C4B1EC3AE0FADF6050919B98B74B15B10920201F9915165687E45CBF64AAA4BECC1DBF3EF2AA034469CE976EFE0FA8D7C85CF4429948B4FD258A20D771781EB95A4DEF2BF68DA22823340F7CC2D72D16B15965CA21A0D176089B3645A1616D322E09694008E94B7F926F35AEB16F6E743CC7C2E25096F96A82A5B828F6B4A1FD5DBC58D65CD60C643A25CAF8EAA0F3E7BAEC5A78FFBC7832B6A947F5D0363BE27A74A30F382387F75CF786672AD9242D3C2CF60F81CE99097CFFAC93560E17ED74C9A1DAFFCBCB0AB17CCB672500110B0C349941BA75BB8EEA0E37DE2DEC5119EBEA91064097E34570446A84D190F6F8E8A38CC343CA322F8ECF697CD989D1914B76E4BFF4A7D405D530978C9E25AC2D518C9469044101D1AEEF498B98EB36C480997671F7ADC68DC111112C0633CA067D0C3B826F049A6EC3B03AEF83BB1622CAFEAD9FF3270429843596D65634EA3283304F9A1F09180A466E96BF21E3D4C6CD906C8CD45641DBC5AECCB7AE5863F7575FE7805850AF8364E1C9F68FAB958B212047D8B551A3AED0C6850A0D279F91DC82A4EF46C6C10CB6F8DFF1C1193007E5E601DC40F624A3F226CB207615D05B0FE70CFAB95558B56CF82F306514564C4F0DCCCA64B2824CC3ABDF2DA81CA5ADD40827360C6D42A48BE63E531D3E0E207929BED7EC03491D085A4DEFFB5F50E7EAC64302E6D58FE1FB0590A60360443F156F3DE5245CE5E1A4CB15EBBF12A276736D36F66723BFCEF823BCB3617D4E1CCFDD54BFCFD12753B467261CBE7258BD1DD36FA3F86115E0B3D36DCCDF59AD6160B0BC11B3A5F7CE6A2DF4D887CECDD238B5EBB6478FDDA9D1F9F45C492E5E5B7936001E3DA393B418FFCB66C1D55A66CD775779EF11C702835544FD3ECA8A0A9B055A68D6AD491E0019CB14260D47019DDE01CA6A1CD7A080FDED25BA5A0F83B430BF3653183F874AAA2CA6151960C401B566E328E0CCBD1542294DCE63D761818AC5BB4DA8349AC18D50075077B0CFA9207E3F2007F1B3F52C26660DE52D4BF4755B467D7D007A5C4CB6A18234B0018B147A2A03DD9056FB908005BD8CFA9EB76D8A2D131E6A7E078EB92CA8FC3A5810E9D39B5FB1759F189558EE30499F3722145F2E3B9DEE84F408EF877A2F009E391AAC739859F3E1F045820EF65995A4265AEEB1C6F577D12BD6E9B9355CC36617DDCBB4EBDA7F8AFE5D40500470BEC950AD87EBD8D4419AF7B3BC3C2D672AF103D1770FFE2DB855FF392A1ADCB5429615C4E0B56B88708A5F8858B2583938F70240DC2F3427C4884FBCDE2511CA177DA2720858DA6D3FC3043AA74032345E8866DEA00A597899A3EE8A3AD94D6DB5E917EED9263FD7BA32E6A67D3A35E5A4C78134B526174BAC3F71AF9A6FA1F68A529537167CCB66C3D99AE81D281FE57F9D1FD9EE5F525B62F0DA02599166B6D99A8B28295663D858B046878CA3424545EED378337DB45107B79229A96F2499DF71684B5C44A4ED365C719413E5098631A392D3940375F709AE8581C5656D25292F52BABA418D79D2B0CA4BEF93C2DC5B31A30BB0364CFE7D2269CAAE82B97E748D24FE8FD0AE79E40F3606DB1D81F3BD1F9D812F2664F2AF4F0F6109EEBB0761946366C5058289D739C26CA9D4B8CC5DB2592916F8E3876E444E634ABFA09D86A198AC3A141E30693347A5D79A5A8D302D1FA5256404FE31DAE7B9B6459682B66F1ECC78E6F76A11A2D660DBC10C0EA51CEA7D58B2717CEA02BA763C379B7374571263D7333E3BD0B8841CD758774E58182C1B2AA14DBA6BDC5FC705FB65A30B5539CA968F20D3C4C7F8A6DEF46B2087D57C476B8DD458C91B6F0B25385A2E098F1D8F7BA4586A27E35FBCFCCAC37E92FE7024442D5E421DD496B7D6DBACB5ACCFAB4C6B3A1DF4CB856AA77B9A289100566DF00852EA5F18CC0E6F091B4B2301F4554599056BA653662771128DA09CEF8BA97B8326F3C75F11F724B71754FBEF24C76AB8CFDAA006CC7595BC1A0BACD71A2475388B225B417FE86E8F5AFC2136D045598B33F424DADA90635CA4B3257FA79AC7C05E0F7E37B5B26DD609FB9B0B358AFBC7A65B515A5CDC7744CA933F7D8DFE4D0032E23D45CF03C5AB1D83CCE1250691ACE69618E31C233FB84F0454DFFE02A818F91D9AC78DE9AD572C3F48CCF6A136C495F13DB51E59E33F691BF4EC05B000EAA5A6863037B331D5C2191CA0DC6F802A23080695AB8A3AD7ACBC8AFDBAC63D3E1F67D880587DA5AD506E0C41AB966CC3B9C818D44033713EE949B94E6891DEC84DB138F92E54059EDC9674D15FD7729AB4B5BC9C86353D7606E23C35B4B81F5AE4DE0655D99B76645787671E305EDFC0927EBFEF35D9D05336BBD8950F1402F7AE8318E5B8011567DE17421A6F65F9ADFEF0C6A60502AC9D0FFD0CF455200115C6481B2ECAB00734790323588CA9E32A243062C68D8961F0984CEEED45A716C0CB5675A7113F1D9692491A737BA01F291816455746DD973B5D265BB1DE94641939520F4BF1C56E21A84D2E2531E10A856F22CFD7396F24C16FE3DEE5791F0D14E9B0AB20DFA474A9C2F3986DC35A572823382D6DBF310240F3EF32F3B0047DF4E03CF6166DC7047970A8F7E0327452532495EBCFF03976F029EDB9784DFDC145ABEF3894046A3DB67F1B7B1FF9A72245C6C756349A5BE2AD140660099ED7EAB40139E86CE79F9255A3DE29074CE266736295BE3A035B7A7B6D3261A8B4B8DC65AFCC17ED2096D6C486459F9234769AED1AD6D19176214303622564782AE870ACB27C52E129F67EB2C4DB62431AB41E3DA17DF58D038161E3F0A71E6ADEB0DA2CCF2DDD10A7B29DF03ADF9FCDD7AFFAD69F9E26971B178C62E2FBC17A64241BD025671AE6A95E96CE9954D25EF72E5253A59B042D3727090226E6ECA4E1807343C88434689338AA4891E6A5B578084A19A42E1E9AC471B565BA313E07798004AE112E665917EE5E31A9A0E90B130E1761E7144F2B98CAD805766D35BC7873CA44A250E705A6D0D0A70FF7AF05612A1BBDFD20F28902548E827C73882A362CF8AB11EC6790DA9A6369A319495A304326B9AF29E720048AFEEB7571B13D28E585CA248CFDF9496D8DC401D4DC45A7DAF04FB38B22F098BAFD57D3F17E0FC172DD0088A5119A1EC433F20A66C452205C6BB44918A3A71411CD785D619DF748997578A5DAC624EFFE6B169F0AFE0E9B0BF7AEE0FF905F5049C277033BC72193790986E51E94F10D3471CEE919C6E1CFFAB918C5CE61BD5B67CAACDB86AF050911809CF5B90CEC7EF9AB9BD3097BC5C3ADE60C2CF29E22E42EF1E5D0695F362632809C8EFAC20EF6F552F96207D70184CFA56EFAB6C7D9DD58F6650F0800E0B5691E885DF908DA0B7E5940FBFB2CA51656871068EE63D2471C6CE52C675FF7F237FDF3C2D1F692A7B5A57E61CCCD3E6F8A6ACF61ECDE75254E4A54DFC078A148484D8FE23D680E8F42EF25F0A9801234B725BD79BAD738F480C45EEFCD91057AFB7C085BCE724E34E2762E5DC58299D07EFE2CDD18F40C942BF626198CB5839970A6B253AEA97259581392B1B633C3127CDE9064497A9EA9AA3918B54ECB52C71A43D9BE66F574E2778A1A66934CE21E3AE9F0E081E8BF0DA65558F12F636098AE01D2D7D569FFDC66C0E1C57254369B8888FE2A295C1F66409C014F1FE21328C5480A31FB7756BF93E81126B4AC7FCA094F324994069263CF89E96FE0B153BF2CA9756679E60957D99E659571F05F59FED4EBF39AFA71CBE9686AD52DA1E3F0BACB7E843D5346CE166ABB3BB77922F2B4C4BB86C6874B366614DFEDAE68E182511EBA59055071B5079D666F11A07C0AD58F7802A059E169C604D11E239483BDF76E88A6D39E72FB97727D9CB6309B44B06AE87053A8BFE504BAB420166786A2F992545746C5D3C2FCAD6588DA491D68F23994BBF62B99749A65B8734735D1B0EB3AB6961CEABD8001DCC5C0EEBCAAC6EB28CE0ED292AB9279DCA1A33404241BD99EB8569931C71A527E0BD1CF4881322257EE4C3349DBFE7C83225B39B2CF5CD303B2FB0197D9F9F2ADAD731EA069180966F442C3FF8EA2A4F4720622C246A809CC7664A3AD8FAE939A0ED527CB6507243A539AF3051988D1451C60FDC2D95B55461226F2DBD4D8EC92332D38AD44D7D4397D0A6171EB48F540BEED695C5086FEF5FA6AF2387CD36C57076197D6F051E08A44337A5A4C5D617BCBBA5F49D48B2C4125F19618805830F96BB2F425417F09DCBB0BFABE71732D3BA9F00F6E7B35AAB32DA7F1556238F8D865676ADE5969D76BDE4FC97E04D6A17CB2B90A49A8512019472DB74263F664AA48D77BBE6C5BBDB97C846B447FC658A8931D972FE71F6F0E7C968BFF6125824E5CADDA1677C4B7D10A12937EAD9F118D23759A35914AA54966569735A2FF7D7A793E707F9417A9762C7734AE69E66F9C76A118809FE0C712C9E82B4B643F8ED9159388868925118BC714B859B0CD7E469F518D36A86D6350EA62E4114E06EE656DE3DA8BA9A69CE326B74434CBDDEA0556F620CF118C0C46899E058886C45B91E145631C88EC6D4A7C442BC68F1EE5E64EEB60A467F7DDB3CFAE55F1CE708CD0F65E7E9A39FCE302D2DE75C51994020841124B91B977C93BB396921D36F938A967B5752B92345B65D3A20025CB7641358EEEFA24C6051070B8D6591FDF0889EF6A232C9FD0DD1C6BC4BBB2315423C449BFC99A335BBB29D6FA1FD703B08F8E3CDE50F7693D5A456A19B171436E6F06F83BA31B256A8FB353BA34BEFA44D12B275608826AA879B7844F0E88DE9A28601AC19CB7DC9DE7D77FF49FE660519C23838089EA623AD0C762465D1B7E8A7912889A46883CDB4D78C02AB5F14376E20FEA7C80C4206F269A327962508411E14544D3EC53AEE411A7F9B2BB2019A7CBA6D83EF08E1ADD9EABF0C3E801B71695085AF75193F12ADE6A821B64E0991E9578204B2C67B6FD55E4F9B18071C7E4BC9BE24A6764E486D33E69F2CACC2684F6918F51B5EEC8BB0489307388B9072308815E3765F208C1885332E6B81568D89865B6A4241F6DFC2F15C54F85FA914A73F38951610E6F8A68F0CD9FE006E3B98FE392C88505B1153E10C398350C53373CF3885D54B0179F9F46C8C0E0FC73BFF26EF1B9CF14A7F900E38B639750FF981F549B88A9CD15322E844222C488D6E35260A5A014ED24FA1716894A74AA9F649BABA8EFBE9573B2F4FF7C4472B1440B2E4112A570DB1272FB64F243985C5A93557AF1A6280884F2919EA8D81AA934C92075D0E6E818B967935F7F73A51AF7248CED2B199B96A6577209E60E463D739EE4E96C492BBFF787B936CE4CE7D477A664D9A8B1AD495ADF1EAB86D5E2133494DD884EB250BE0D7DE9365B4B0737EB73C33BCBE317022E2544445F42BDA7432C206CBD2E6591F0934B5C8B6056D208DBE118B05AEFAC4B050E4E0707DA8593035D006E2D88C8A57D1ADAD6A5BF2422BF4441CB0B850588A26FF00858776A03DD95B10911698D165FB7C1129EF24DD7ED25E001D49FF6118CDB5DC8B575C35E830B845D21CC987C00E19D4803FE3CC190AF3F02002A4F5DF8EAB1928B7C2C386A9531E2A4B47A35611B3A13BD144BDFA2AA0188874735DA98CBDDB61E68212847AA6F5956ED777C96649D9634BA8D897093563FAC04B5698019FB6BBC3706025B9CCEC821DB39BEEA4DA0E0829F8C9F715263E317FBBDCC650992D232FFA3252B7D3D7585896839BEB2DE0EA808C03814274C008D8FCE3918F1B03289EEB212521E6EE7D78F9433F6D94EBAF203EC1A95F226270ACA1583BF64CDBF461010842BDB1C13BE3E27B0755B0327290B01FF4F636B67DDDFD96F08170AC2400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/AIBEJO+BrandonGrotesque-Bold cguidfix
/F3.1/AIBEJO+BrandonGrotesque-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.29353487 0.29353487 0.29353487 sc
0.60000002 i
q
0 0 557 325 rc
1 0 0 -1 2 314 cm
/F1.1[ 260 0 0 -260 0 0]sf
0 220 m
(!"#$%&')[ 104.000000 51.480000 86.840000 97.500000 75.140000 52.780000 0.000000 ] xS
1 0 0 -1 142 333 cm
/F2.1[ 25 0 0 -25 0 0]sf
0 26 m
(!"#$%"&'"\(\)*\(+&,#,\(-*./*0")[ 14.325000 12.775000 9.700000 8.875000 8.425000 12.775000 6.775000 6.950000 12.775000 6.250000 12.875000 10.725000 6.250000 16.100000 6.775000 12.775000 9.700000 12.775000 6.250000 17.375000 10.725000 13.025000 13.225000 10.725000 5.800000 0.000000 ] xS
1 0 0 -1 1 27 cm
/F3.1[ 20 0 0 -20 0 0]sf
0 21 m
(!"#!$%&'\($\)*'+%,%\)+-./$0%&'\($\)*'+)[ 20.320000 18.640000 13.060000 20.380000 12.260000 10.420000 20.760000 17.760000 16.840000 12.260000 20.240000 21.460000 17.760000 19.320000 10.420000 9.600000 10.420000 20.240000 19.320000 19.260000 17.840000 21.380000 12.260000 19.680000 10.420000 20.760000 17.760000 16.840000 12.260000 20.240000 21.460000 17.760000 0.000000 ] xS
ep
end
